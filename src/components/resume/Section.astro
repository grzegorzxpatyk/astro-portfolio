---
export interface listItem {
  title: string;
  organisation: string;
  organisationWebsite?: string;
  timePeriod: string;
  description?: string;
}

type Props = {
  title: string,
  type: 'list' | 'description',
  listItems?: Array<listItem>,
  description?: string,
  isLast?: boolean,
};

const { title, type, listItems, description, isLast = false} = Astro.props;
---

<section class={(!isLast ? 'pb-8 mb-8 border-b border-b-zinc-700 dark:border-b-zinc-400' : '')}>
  <h3 class="text-2xl mb-6 font-bold">{title}</h3>

  {type === 'list' && listItems ? (
    listItems.map(item => (
      <div class="mb-6">
        <h4 class="text-lg block border-b-zinc-500 dark:border-b-zinc-800 font-semibold">{item.title}</h4>
        <div class="flex flex-row justify-between items-center text-sm mb-3">
          <span>
            {item.organisationWebsite ? (
              <a href={item.organisationWebsite} target="_blank">{item.organisation}</a>
            ) : (
              item.organisation
            )}
          </span>
          <span>{item.timePeriod}</span>
        </div>
        {item.description && <p class="text-justify" set:html={item.description}></p>}
      </div>
    ))
  ) : type === 'description' && description ? (
    <p class="text-justify">{description}</p>
  ) : null}
</section>
